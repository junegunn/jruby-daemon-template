#!/bin/bash

# Enable logging
LOGGING=1

# Arguments for the script
ARGV=""

# ---------------------------------------------------
APP_NAME=$(basename "$BASH_SOURCE")
APP_PATH=$(dirname "$BASH_SOURCE")
RUBY_SCRIPT="$BASH_SOURCE".rb

PID_PATH=$APP_PATH/pid
PID_FILE=$PID_PATH/$APP_NAME.pid
mkdir -p $PID_PATH

LOG_PATH=$APP_PATH/log
OUT_FILE=$LOG_PATH/$APP_NAME.out
ERR_FILE=$LOG_PATH/$APP_NAME.err
[ $LOGGING -eq 1 ] && mkdir -p $LOG_PATH

# ---------------------------------------------------
JRUBY_HOME=
JRUBY=$JRUBY_HOME/bin/jruby
GEM=$JRUBY_HOME/bin/gem

export GEM_PATH=
export GEM_HOME=

# ---------------------------------------------------

start_daemon() {
	if [ -e "$PID_FILE" ]; then
		echo "PID file already exists."
		exit 1
	else
		echo "Starting $APP_NAME."
    if [ $LOGGING -eq 1 ]; then
      nohup $JRUBY $RUBY_SCRIPT $ARGV 2>> $ERR_FILE >> $OUT_FILE &
      echo $! > "$PID_FILE"
    else
      nohup $JRUBY $RUBY_SCRIPT $ARGV 2> /dev/null > /dev/null &
      echo $! > "$PID_FILE"
    fi
    exit $?
	fi
}

stop_daemon() {
	if [ -e "$PID_FILE" ]; then
		echo "Stopping $APP_NAME."
		PID=`cat $PID_FILE`
		while [ 1 ]; do
			kill -TERM $PID 2> /dev/null
			sleep 1
			[ `ps $PID 2> /dev/null | grep $PID | wc -l` -eq 0 ] && break
		done
		rm $PID_FILE
	else
		echo "PID file not found."
    return 1
	fi
}

case $1 in
	start)
		start_daemon
	;;
	stop)
		stop_daemon
	;;
	restart)
		stop_daemon
		sleep 1
		start_daemon
  ;;
  *)
    echo "usage: $0 start|stop|restart"
    exit 1
	;;
esac

